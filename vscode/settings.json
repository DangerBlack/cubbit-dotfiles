{
    // "update.mode": "none",
    // "typescript.tsserver.log": "verbose",
    "window.zoomLevel": -1,
    // Editor
    "editor.formatOnSave": true,
    "editor.formatOnType": false,
    "editor.fontFamily": "Cascadia Code, Consolas, 'Courier New', monospace",
    "editor.fontLigatures": true,
    "editor.inlineSuggest.enabled": true,
    "editor.minimap.enabled": false,
    "editor.rulers": [
        80,
        100
    ],
    "zenMode.hideLineNumbers": false,
    "explorer.sortOrder": "type",
    "search.searchOnType": false,
    "workbench.colorTheme": "Default Dark+",
    "workbench.colorCustomizations": {},
    "workbench.editorAssociations": [],
    "workbench.iconTheme": "vscode-icons",
    "workbench.startupEditor": "welcomePage",
    "diffEditor.ignoreTrimWhitespace": false,
    "diffEditor.renderSideBySide": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    // Extensions
    "C_Cpp.autoAddFileAssociations": false,
    "C_Cpp.experimentalFeatures": "Enabled",
    "githubIssues.issueCompletions.enabled": false,
    "githubPullRequests.defaultMergeMethod": "rebase",
    "githubPullRequests.pullBranch": "never",
    "gitlens.gitCommands.closeOnFocusOut": true,
    "liveServer.settings.donotShowInfoMsg": true,
    "liveshare.featureSet": "insiders",
    "redhat.telemetry.enabled": false,
    "vsicons.presets.nestjs": true,
    "vsicons.projectDetection.disableDetect": true,
    "yaml.validate": false,
    // Formatter
    "clang-format.language.javascript.enable": false,
    "clang-format.language.typescript.enable": false,
    "[cpp]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "[javascript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[typescript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[proto3]": {
        "editor.defaultFormatter": "zxh404.vscode-proto3"
    },
    "js/ts.implicitProjectConfig.checkJs": true,
    "js/ts.implicitProjectConfig.experimentalDecorators": true,
    "js/ts.implicitProjectConfig.strictFunctionTypes": true,
    "js/ts.implicitProjectConfig.strictNullChecks": true,
    "javascript.format.enable": true,
    "javascript.format.insertSpaceAfterCommaDelimiter": true,
    "javascript.format.insertSpaceAfterConstructor": false,
    "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
    "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,
    "javascript.format.insertSpaceAfterSemicolonInForStatements": true,
    "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
    "javascript.format.insertSpaceBeforeFunctionParenthesis": false,
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks": true,
    "javascript.format.placeOpenBraceOnNewLineForFunctions": true,
    "javascript.format.semicolons": "insert",
    "typescript.format.enable": true,
    "typescript.format.insertSpaceAfterCommaDelimiter": true,
    "typescript.format.insertSpaceAfterConstructor": false,
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,
    "typescript.format.insertSpaceAfterSemicolonInForStatements": true,
    "typescript.format.insertSpaceAfterTypeAssertion": false,
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
    "typescript.format.insertSpaceBeforeFunctionParenthesis": false,
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": true,
    "typescript.format.placeOpenBraceOnNewLineForFunctions": true,
    "typescript.format.semicolons": "insert",
    "typescript.preferences.quoteStyle": "single",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "typescriptHero.imports.disableImportRemovalOnOrganize": false,
    "typescriptHero.imports.insertSemicolons": true,
    "typescriptHero.imports.insertSpaceBeforeAndAfterImportBraces": false,
    "typescriptHero.imports.organizeOnSave": true,
    "eslint.validate": [
        "typescript",
        "typescriptreact"
    ],
    // Associations
    "yaml.schemas": {
        "file:///c%3A/Users/Alessio/.vscode/extensions/atlassian.atlascode-2.8.5/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
    },
    "json.schemas": [],
    "files.associations": {
        "Dockerfile.*": "dockerfile",
        "Tiltfile": "bazel",
        "*.tilt": "bazel"
    }
    // END
}
